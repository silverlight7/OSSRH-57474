import org.gradle.api.publish.maven.MavenPublication
import org.gradle.api.tasks.bundling.Jar

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}
apply from: rootDir.canonicalPath + '/.gradle/publish.gradle'

group 'com.github.silverlight7'
version '1.0.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {


    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.0.rc1'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.68'

    //compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.4.1'

    //compile group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    compile group: 'com.lmax', name: 'disruptor', version: '3.4.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.2.6.RELEASE'

    compile group: 'io.micrometer', name: 'micrometer-core', version: '1.4.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator-autoconfigure', version: '2.2.6.RELEASE'
    //implementation 'org.springframework.boot:spring-boot-starter-web'

    //compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.4.5.RELEASE'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.6.RELEASE'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.9.5'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}



task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}


publishing {
    // 定义发布什么
    publications {
        mavenJava(MavenPublication) {
            // groupId = project.group
            // artifactId = project.name
            // version = project.version
            // groupId,artifactId,version，如果不定义，则会按照以上默认值执行
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                // 构件名称
                // 区别于artifactId，可以理解为artifactName
                name = 'common-event'
                // 构件描述
                description = 'Common Event library'
                // 构件主页
                url = 'https://github.com/silverlight7/OSSRH-57474'
                // 许可证名称和地址
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        name = '吴伯文'
                        email = 'wubowen1215@gmail.com'
                    }
                }
                // 版本控制仓库地址
                scm {
                    url = 'https://github.com/silverlight7/OSSRH-57474'
                    connection = 'scm:git:git://github.com/silverlight7/OSSRH-57474.git'
                    developerConnection = 'scm:git:ssh://git@github.com:silverlight7/OSSRH-57474.git'
                }
            }
        }
    }
    // 定义发布到哪里
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {

                // 这里就是之前在issues.sonatype.org注册的账号
                username sonatypeusername
                password sonatypepassword
            }
            //url "https://oss.sonatype.org/content/repositories/snapshots"


        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    // <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    // 防止本地打开中文乱码
    options.addStringOption("charset", "UTF-8")
}